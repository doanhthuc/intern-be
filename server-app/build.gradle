plugins {
    id 'java'
    id 'groovy'
    id "org.sonarqube" version "3.5.0.2730"
    alias(gradlePluginLibs.plugins.spring.boot)
    alias(gradlePluginLibs.plugins.spring.dependency.management)
}

/** ---- SONAR CONFIGURATION ---- **/
sonar {
    properties {
        property "sonar.projectKey", "Easy-Quizy"
        property "sonar.scm.provider", "git"
        property "sonar.qualitygate.wait", true
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/groovy"
        if (System.env.BRANCH_NAME != 'develop') {
            property "sonar.pullrequest.key", System.env.BRANCH_NAME
            property "sonar.pullrequest.branch", System.env.BRANCH_NAME
            property "sonar.pullrequest.base", 'develop'
        }
    }
}

dependencies {

    // Spring
    implementation libs.spring.boot.starter.web
    implementation libs.spring.boot.starter.actuator
    implementation libs.spring.boot.starter.data.jpa
    implementation libs.spring.boot.starter.validation
    implementation libs.spring.beans
    implementation libs.spring.boot.starter.validation
    implementation libs.spring.boot.starter.security
    implementation libs.spring.boot.devtools
    implementation libs.swagger.models
    implementation libs.spring.boot.starter.webflux
    annotationProcessor libs.spring.boot.configuration.processor

    //jjwt
    implementation libs.jjwt.api
    implementation libs.jjwt.impl
    implementation libs.jjwt.jackson

    // lombok
    implementation libs.lombok
    annotationProcessor libs.lombok

    // DB
    implementation libs.h2
    implementation libs.postgresql

    // OpenAPI
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    // Test
    testImplementation testCatalogLibs.groovy.all
    testImplementation testCatalogLibs.spock.core
    testImplementation testCatalogLibs.spock.spring
    testImplementation testCatalogLibs.spring.boot.starter.test

    // mapper
    implementation libs.mapstruct
    annotationProcessor libs.mapstruct.processor
    implementation libs.flyway.core

    // passay
    implementation libs.passay

    // okHttp
    implementation libs.okhttp
}
